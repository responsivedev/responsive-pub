services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      backend:
        ipv4_address: 10.0.0.12

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    hostname: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INTERNAL://broker:29092,PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 1000
    networks:
      backend:
        ipv4_address: 10.0.0.20

  minio:
    container_name: minio
    hostname: minio
    image: docker.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
    command: server /minio --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY_FILE=/etc/minio/insecure.access.key
      - MINIO_SECRET_KEY_FILE=/etc/minio/insecure.secret.key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      timeout: 10s
      retries: 100
    volumes:
      - ./volumes/minio/etc:/etc/minio:ro
    networks:
      backend:
        ipv4_address: 10.0.0.61

  rs3:
    # Remember to update the image in github-e2e.yaml as well
    image: rs3:local
    platform: linux/amd64
    container_name: rs3
    hostname: rs3
    ports:
      - 50051:50051
    environment:
      CONFIG_FILE: /etc/rs3/rs3.toml
      AWS_ACCESS_KEY_ID: antithesis
      AWS_SECRET_ACCESS_KEY: antithesis
      RS3_ALLOW_S3_HTTP: true
    volumes:
      - ./volumes/minio/data:/minio:rw
      - ./volumes/rs3.toml:/etc/rs3/rs3.toml
    networks:
      backend:
        ipv4_address: 10.0.0.60

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24