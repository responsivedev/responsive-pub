name: "Build/Publish Gradle Module"
description: "Build, test, release, and publish a single module via gradle"
inputs:
  module:
    required: true
    description: "which module to build and publish"
  force_version:
    default: "None"
    required: false
    description: "desired release version (use root module version for all sub-modules, eg kafka-client:currentVersion for responsive-test-utils)"
  OSSRH_USER:
    required: true
    description: "the OSSRH user (found in the 'secrets' context)"
  OSSRH_PASSWORD:
    required: true
    description: "the OSSRH password (found in the 'secrets' context)"
  SIGNING_KEY:
    required: true
    description: "the signing key (found in the 'secrets' context)"
  SIGNING_PASSWORD:
    required: true
    description: "the signing key password (found in the 'secrets' context)"

outputs:
  release_version:
    description: "the version of the current release"
    value: ${{ steps.print-release-version.outputs.version }}

runs:
  using: composite
  steps:
    - name: "Gradle: Build & Test"
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: :${{ inputs.module }}:build

    - name: "Gradle: Release Version"
      if: ${{ inputs.force_version == 'None' }}
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: :${{ inputs.module }}:release

    - name: "Gradle: Release Version (forced)"
      if: ${{ inputs.force_version != 'None' }}
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: :${{ inputs.module }}:release -Prelease.forceVersion=${{ inputs.force_version }}

    - name: "Gradle: Publish Artifacts"
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: :${{ inputs.module }}:publish # publish to both S3 and Sonatype OSSRH
      env:
        OSSRH_USER: ${{ inputs.OSSRH_USER }}
        OSSRH_PASSWORD: ${{ inputs.OSSRH_PASSWORD }}
        SIGNING_KEY: ${{ inputs.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ inputs.SIGNING_PASSWORD }}

    - name: "Print Release Version"
      id: print-release-version
      shell: bash
      run: |
        RELEASE_VERSION=$(./gradlew ${{ inputs.module }}:currentVersion | grep "Project version" | sed -e "s|Project version: ||g")
        echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
