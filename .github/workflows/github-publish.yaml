name: Publish Artifacts
on:
  workflow_dispatch:
    inputs:
      module:
        required: true
        description: which module to publish
      increment:
        required: false
        default: incrementMinor
        description: version increment (default minor)
jobs:
  build:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: write # This is required for actions/checkout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.TOOLS_GHA_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::292505934682:role/github-responsive-pub-main
          role-session-name: github-publish-artifacts
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build & Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{ inputs.module }}:build

      - name: Release
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{ inputs.module }}:release

      - name: Publish
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{ inputs.module }}:publish # publish to both S3 and Sonatype OSSRH
        env:
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

      - name: Publish Images
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.module == 'operator' }}
        with:
          arguments: pushCRD pushDocker pushHelm -PdockerRegistry=${{ steps.login-ecr-public.outputs.registry }}/j8q9y0n6 -PhelmRegistry=${{ steps.login-ecr-public.outputs.registry }}/j8q9y0n6
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}

      - name: Create Next Version Commit
        run: |
          git config --global user.name 'Responsive Tools'
          git config --global user.email 'tools@responsive.dev'
          ./gradlew :${{ inputs.module }}:markNextVersion \
            -Prelease.incrementer=${{ inputs.increment }} \
            -Prelease.dryRun | grep "Creating" | git commit --allow-empty -F -
          git push

      - name: Increment Version
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{ inputs.module }}:markNextVersion -Prelease.incrementer=${{ inputs.increment }}
